#
# This file is a part of the Sharemind framework.
# Copyright (C) Cybernetica AS
#
# All rights are reserved. Reproduction in whole or part is prohibited
# without the written consent of the copyright owner. The usage of this
# code is subject to the appropriate license agreement.
#
CMAKE_MINIMUM_REQUIRED(VERSION 2.8.12)
PROJECT(SHAREMIND_LIBDBCOMMON)
SET(SHAREMIND_LIBDBCOMMON_VERSION "0.1.0")

IF(DEFINED SHAREMIND_APPSERV_REPO_SOURCE_DIR)
    INCLUDE("${SHAREMIND_APPSERV_REPO_SOURCE_DIR}/config.local" OPTIONAL)
    INCLUDE("${SHAREMIND_APPSERV_REPO_BINARY_DIR}/config.local" OPTIONAL)
ENDIF()
INCLUDE("${CMAKE_CURRENT_SOURCE_DIR}/config.local" OPTIONAL)
INCLUDE("${CMAKE_CURRENT_BINARY_DIR}/config.local" OPTIONAL)

ADD_COMPILE_OPTIONS(
  "-std=c++11" "-Wall" "-Wextra" "-O2" "-fPIC"
  "$<$<NOT:$<STREQUAL:$<CONFIGURATION>,Release>>:-ggdb>"
  "$<$<NOT:$<STREQUAL:$<CONFIGURATION>,Release>>:-fno-omit-frame-pointer>"
  "$<$<STREQUAL:$<CONFIGURATION>,Release>:-DNDEBUG>"
  "$<$<STREQUAL:$<CONFIGURATION>,Release>:-fomit-frame-pointer>"
)

FIND_PACKAGE(Boost REQUIRED)
FIND_PACKAGE(LogHard REQUIRED)
FIND_PACKAGE(SharemindCxxHeaders REQUIRED)
FIND_PACKAGE(SharemindLibmodapi REQUIRED)
FIND_PACKAGE(SharemindLibvm REQUIRED)
FIND_PACKAGE(SharemindVmGlobals REQUIRED)

MACRO(SetList list)
  SET("${list}" "")
  LIST(APPEND "${list}" ${ARGN})
ENDMACRO()

SetList(SHAREMIND_LIBDBCOMMON_EXTERNAL_INCLUDE_DIRS
    ${Boost_INCLUDE_DIRS}
    ${LogHard_INCLUDE_DIRS}
    ${SharemindCxxHeaders_INCLUDE_DIRS}
    ${SharemindLibmodapi_INCLUDE_DIRS}
    ${SharemindLibvm_INCLUDE_DIRS}
    ${SharemindVmGlobals_INCLUDE_DIRS}
)
LIST(REMOVE_DUPLICATES SHAREMIND_LIBDBCOMMON_EXTERNAL_INCLUDE_DIRS)
SetList(SHAREMIND_LIBDBCOMMON_INSTALL_INCLUDE_DIRS
        "${CMAKE_INSTALL_PREFIX}/include"
        ${SHAREMIND_LIBDBCOMMON_EXTERNAL_INCLUDE_DIRS})
LIST(REMOVE_DUPLICATES SHAREMIND_LIBDBCOMMON_INSTALL_INCLUDE_DIRS)

SetList(SHAREMIND_LIBDBCOMMON_EXTERNAL_DEFINITIONS
    ${LogHard_DEFINITIONS}
    ${SharemindCxxHeaders_DEFINITIONS}
    ${SharemindLibmodapi_DEFINITIONS}
    ${SharemindLibvm_DEFINITIONS}
    ${SharemindVmGlobals_DEFINITIONS}
)
SetList(SHAREMIND_LIBDBCOMMON_INSTALL_DEFINITIONS
        ${SHAREMIND_LIBDBCOMMON_EXTERNAL_DEFINITIONS}
        "-D__STDC_LIMIT_MACROS"
)
LIST(REMOVE_DUPLICATES SHAREMIND_LIBDBCOMMON_INSTALL_DEFINITIONS)

SetList(SHAREMIND_LIBDBCOMMON_EXTERNAL_LIBRARIES
    ${LogHard_LIBRARIES}
    ${SharemindCxxHeaders_LIBRARIES}
    ${SharemindLibmodapi_LIBRARIES}
    ${SharemindLibvm_LIBRARIES}
    ${SharemindVmGlobals_LIBRARIES}
)
LIST(REMOVE_DUPLICATES SHAREMIND_LIBDBCOMMON_EXTERNAL_LIBRARIES)
SetList(SHAREMIND_LIBDBCOMMON_INSTALL_LIBRARIES
        ${SHAREMIND_LIBDBCOMMON_EXTERNAL_LIBRARIES}
        "-L${CMAKE_INSTALL_PREFIX}/lib" "-lsharemind_dbcommon"
)

INCLUDE_DIRECTORIES(${SHAREMIND_LIBDBCOMMON_EXTERNAL_INCLUDE_DIRS})
ADD_DEFINITIONS(${SHAREMIND_LIBDBCOMMON_INSTALL_DEFINITIONS})

FILE(GLOB_RECURSE DBCOMMON_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/*.cpp")
FILE(GLOB_RECURSE DBCOMMON_HEADERS "${CMAKE_CURRENT_SOURCE_DIR}/*.h")

IF(NOT DEFINED SHAREMIND_DBCOMMON_LINKING_MODE)
    SET(SHAREMIND_DBCOMMON_LINKING_MODE STATIC)
ENDIF()
ADD_LIBRARY("sharemind_dbcommon" ${SHAREMIND_DBCOMMON_LINKING_MODE}
            ${DBCOMMON_SOURCES}
            ${DBCOMMON_HEADERS})
TARGET_LINK_LIBRARIES("sharemind_dbcommon"
                      ${SHAREMIND_LIBDBCOMMON_EXTERNAL_LIBRARIES})
INSTALL(TARGETS "sharemind_dbcommon"
        LIBRARY DESTINATION "lib"
        ARCHIVE DESTINATION "lib")
INSTALL(DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/"
        DESTINATION "include/sharemind/dbcommon"
        FILES_MATCHING PATTERN "*.h")

CONFIGURE_FILE(
    "${CMAKE_CURRENT_SOURCE_DIR}/SharemindLibDbCommonConfig.cmake.in"
    "${CMAKE_CURRENT_BINARY_DIR}/SharemindLibDbCommonConfig.cmake" @ONLY)
INSTALL(FILES "${CMAKE_CURRENT_BINARY_DIR}/SharemindLibDbCommonConfig.cmake"
        DESTINATION "lib/SharemindLibDbCommon")
CONFIGURE_FILE(
    "${CMAKE_CURRENT_SOURCE_DIR}/SharemindLibDbCommonConfigVersion.cmake.in"
    "${CMAKE_CURRENT_BINARY_DIR}/SharemindLibDbCommonConfigVersion.cmake" @ONLY)
INSTALL(FILES "${CMAKE_CURRENT_BINARY_DIR}/SharemindLibDbCommonConfigVersion.cmake"
        DESTINATION "lib/SharemindLibDbCommon")
